<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/08/22/hello-world/"/>
    <url>/2022/08/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python中特殊的数据类型之集合set</title>
    <link href="/2022/07/07/python-set/"/>
    <url>/2022/07/07/python-set/</url>
    
    <content type="html"><![CDATA[<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>Python 中的集合，和数学中的集合概念一样，用来<strong>保存不重复的元素</strong>，即集合中的元素都是<strong>唯一</strong>的，互不相同。</p><p>从形式上看，和字典类似，Python 集合会将所有元素放在一对大括号<code>&#123;&#125;</code>中，相邻元素之间用<code>,</code>分隔，如下所示。其中，<code>elementi</code>表示集合中的元素，个数没有限制。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;element1, element2, ..., elementn&#125;<br></code></pre></td></tr></table></figure><h3 id="1-1-可以存储的数据类型"><a href="#1-1-可以存储的数据类型" class="headerlink" title="1.1. 可以存储的数据类型"></a>1.1. 可以存储的数据类型</h3><p>同一集合中，只能存储<strong>不可变</strong>的数据类型，<strong>包括整形、浮点型、字符串、元组</strong>，<strong>无法存储列表、字典、集合这些可变的数据类型</strong>，否则 Python 解释器会抛出 TypeError 错误。</p><p>比如说：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;&#123;<span class="hljs-string">&#x27;a&#x27;</span>:<span class="hljs-number">1</span>&#125;&#125; <span class="hljs-comment"># 不可以是字典</span><br>&#123;[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]&#125; <span class="hljs-comment"># 不可以是列表</span><br>&#123;&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;&#125; <span class="hljs-comment"># 不可以是集合</span><br></code></pre></td></tr></table></figure><p><img src="/pics/set-create-1.png"></p><h3 id="1-2-集合的唯一性"><a href="#1-2-集合的唯一性" class="headerlink" title="1.2. 集合的唯一性"></a>1.2. 集合的唯一性</h3><p>需要注意的是，数据必须<strong>保证是唯一</strong>的，因为集合对于每种数据元素，<strong>只会保留一份</strong>。<br>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>&#125;<br></code></pre></td></tr></table></figure><p>最终集合为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125;<br></code></pre></td></tr></table></figure><p><img src="/pics/set-create-2.png"></p><h3 id="1-3-集合中元素的顺序"><a href="#1-3-集合中元素的顺序" class="headerlink" title="1.3. 集合中元素的顺序"></a>1.3. 集合中元素的顺序</h3><p>由于 Python 中的 set 集合是<strong>无序</strong>的，所以<strong>每次输出时元素的排序顺序可能都不相同</strong>。</p><h3 id="1-4-set-和-forzenset"><a href="#1-4-set-和-forzenset" class="headerlink" title="1.4. set 和 forzenset"></a>1.4. set 和 forzenset</h3><p>其实，Python 中有两种集合类型，一种是 <code>set</code> 类型的集合，另一种是 <code>frozenset</code> 类型的集合，它们唯一的区别是，<code>set</code> 类型集合<strong>可以做添加、删除元素的操作</strong>，而 <code>forzenset</code> 类型集合不行。</p><p>以下皆以 <code>set</code> 类型的集合进行讲解</p><h2 id="2-创建集合"><a href="#2-创建集合" class="headerlink" title="2. 创建集合"></a>2. 创建集合</h2><h3 id="2-1-使用-创建"><a href="#2-1-使用-创建" class="headerlink" title="2.1. 使用 {} 创建"></a>2.1. 使用 {} 创建</h3><p>在 Python 中，创建 <code>set</code> 集合<strong>可以像列表、元素和字典一样，直接将集合赋值给变量</strong>，从而实现创建集合的目的，其语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">setname = &#123;element1,element2,...,elementn&#125;<br></code></pre></td></tr></table></figure><p>其中，<code>setname</code> 表示集合的名称，起名时既要符合 Python 命名规范，也要避免与 Python 内置函数重名。<br>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">mySet = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2.0</span>, (<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>)&#125;<br><span class="hljs-built_in">print</span>(mySet)<br></code></pre></td></tr></table></figure><p><img src="/pics/set-create-3.png"></p><h3 id="2-2-使用-set-函数创建"><a href="#2-2-使用-set-函数创建" class="headerlink" title="2.2. 使用 set() 函数创建"></a>2.2. 使用 set() 函数创建</h3><p>set() 函数为 Python 的内置函数，其功能是<strong>将字符串、列表、元组、 range 对象等可迭代对象转换成集合</strong>。该函数的语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">setname = <span class="hljs-built_in">set</span>(iteration)<br></code></pre></td></tr></table></figure><p>其中，<code>iteration</code> 就表示字符串、列表、元组、 range 对象等数据。<br>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">set1 = <span class="hljs-built_in">set</span>(<span class="hljs-string">&quot;c.biancheng.net&quot;</span>)<br>set2 = <span class="hljs-built_in">set</span>([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>])<br>set3 = <span class="hljs-built_in">set</span>((<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br></code></pre></td></tr></table></figure><p><img src="/pics/set-create-4.png"></p><h3 id="2-3-创建空集合"><a href="#2-3-创建空集合" class="headerlink" title="2.3. 创建空集合"></a>2.3. 创建空集合</h3><p><strong>注意</strong>，如果要创建<strong>空集合</strong>，<strong>只能</strong>使用 <code>set()</code> 函数实现。因为直接使用一对 <code>&#123;&#125;</code> ，Python 解释器会将其视为一个<strong>空字典</strong>。</p><h2 id="3-删除-set-集合"><a href="#3-删除-set-集合" class="headerlink" title="3. 删除 set 集合"></a>3. 删除 set 集合</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-number">1</span>,(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>),<span class="hljs-string">&#x27;c&#x27;</span>&#125;<br><span class="hljs-built_in">print</span>(a)<br><br><span class="hljs-keyword">del</span>(a)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><img src="/pics/set-delete-1.png"></p><h2 id="4-访问-set-集合元素"><a href="#4-访问-set-集合元素" class="headerlink" title="4. 访问 set 集合元素"></a>4. 访问 set 集合元素</h2><p>由于集合中的元素是<strong>无序</strong>的，因此<strong>无法像列表那样使用下标访问元素</strong>。</p><p>Python 中，访问集合元素最常用的方法是使用<strong>循环结构</strong>，将集合中的数据逐一读取出来。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">s = &#123;<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-number">1</span>, (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>), <span class="hljs-string">&#x27;c&#x27;</span>&#125;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s:<br>    <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><p><img src="/pics/set-view-1.png"></p><h2 id="5-set-集合对元素的操作"><a href="#5-set-集合对元素的操作" class="headerlink" title="5. set 集合对元素的操作"></a>5. set 集合对元素的操作</h2><p>Python 中 <code>set</code> 集合最常用的操作是向集合中<strong>添加、删除元素</strong>，以及<strong>集合之间做交集、并集、差集等运算</strong>。</p><h3 id="5-1-添加元素"><a href="#5-1-添加元素" class="headerlink" title="5.1. 添加元素"></a>5.1. 添加元素</h3><p><code>set</code> 集合中添加元素，可以使用 <code>set</code> 类型提供的 <code>add()</code> 方法实现，该方法的语法格式为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">setname.add(element)<br></code></pre></td></tr></table></figure><p>其中， <code>setname</code> 表示要添加元素的集合， <code>element</code> 表示要添加的元素内容。</p><p>与创建集合的规则相同，使用 <code>add()</code> 方法添加的元素，只能是<strong>数字、字符串、元组或者布尔类型值</strong>（ <code>True</code> 和 <code>False</code> ），<strong>不能添加列表、字典、集合这类可变的数据</strong>，否则 Python 解释器会报 <code>TypeError</code> 错误。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;<br>a.add([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>])<br></code></pre></td></tr></table></figure><p><img src="/pics/set-add-1.png"></p><h3 id="5-2-删除元素"><a href="#5-2-删除元素" class="headerlink" title="5.2. 删除元素"></a>5.2. 删除元素</h3><p>删除现有 <code>set</code> 集合中的指定元素，可以使用 <code>remove()</code> 方法，该方法的语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">setname.remove(element)<br></code></pre></td></tr></table></figure><p>使用此方法删除集合中元素，需要注意的是，如果<strong>被删除元素本就不包含在集合中</strong>，则此方法会抛出 <code>KeyError</code> 错误，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">s = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>&#125;<br>s.remove(<span class="hljs-number">1</span>)<br>s.remove(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><img src="/pics/set-remove-1.png"></p><p>如果我们不想在删除失败时令解释器提示 <code>KeyError</code> 错误，还可以使用 <code>discard()</code> 方法，此方法和 <code>remove()</code> 方法的用法完全相同，唯一的区别就是，当删除集合中元素失败时，此方法<strong>不会抛出任何错误</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;<br>a.remove(<span class="hljs-number">1</span>)<br>a.discard(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><img src="/pics/set-discard-1.png"></p><h2 id="6-set-集合做交集、并集、差集运算"><a href="#6-set-集合做交集、并集、差集运算" class="headerlink" title="6. set 集合做交集、并集、差集运算"></a>6. set 集合做交集、并集、差集运算</h2><p>集合最常做的操作就是进行<strong>交集、并集、差集以及对称差集</strong>运算。</p><p><img src="/pics/set-calc-1.png"></p><p>图中，有 2 个集合，分别为 <code>set1=&#123;1,2,3&#125;</code> 和 <code>set2=&#123;3,4,5&#125;</code> ，它们既有相同的元素，也有不同的元素。以这两个集合为例，分别做不同运算的结果如下表所示。</p><table><thead><tr><th align="center">运算操作</th><th align="center">Python运算符</th><th align="center">含义</th><th align="center">例子</th></tr></thead><tbody><tr><td align="center">交集</td><td align="center">&amp;</td><td align="center">取两集合公共的元素</td><td align="center">&gt;&gt;&gt;   set1 &amp; set2<br>     {3}</td></tr><tr><td align="center">并集</td><td align="center">|</td><td align="center">取两集合全部的元素</td><td align="center">&gt;&gt;&gt;   set1 | set2<br>     {1,2,3,4,5}</td></tr><tr><td align="center">差集</td><td align="center">-</td><td align="center">取一个集合中另一集合没有的元素</td><td align="center">&gt;&gt;&gt;   set1 - set2<br>     {1,2}<br>     &gt;&gt;&gt; set2 - set1<br>     {4,5}</td></tr><tr><td align="center">对称差集</td><td align="center">^</td><td align="center">取集合 A 和 B 中不属于 A&amp;B 的元素</td><td align="center">&gt;&gt;&gt;   set1 ^ set2<br>     {1,2,4,5}</td></tr></tbody></table><h2 id="7-set-集合方法详解"><a href="#7-set-集合方法详解" class="headerlink" title="7. set 集合方法详解"></a>7. set 集合方法详解</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">dir</span>(<span class="hljs-built_in">set</span>)<br>[<span class="hljs-string">&#x27;add&#x27;</span>, <br><span class="hljs-string">&#x27;clear&#x27;</span>, <br><span class="hljs-string">&#x27;copy&#x27;</span>, <br><span class="hljs-string">&#x27;difference&#x27;</span>, <br><span class="hljs-string">&#x27;difference_update&#x27;</span>, <br><span class="hljs-string">&#x27;discard&#x27;</span>, <br><span class="hljs-string">&#x27;intersection&#x27;</span>, <br><span class="hljs-string">&#x27;intersection_update&#x27;</span>, <br><span class="hljs-string">&#x27;isdisjoint&#x27;</span>, <br><span class="hljs-string">&#x27;issubset&#x27;</span>, <br><span class="hljs-string">&#x27;issuperset&#x27;</span>, <br><span class="hljs-string">&#x27;pop&#x27;</span>, <br><span class="hljs-string">&#x27;remove&#x27;</span>, <br><span class="hljs-string">&#x27;symmetric_difference&#x27;</span>, <br><span class="hljs-string">&#x27;symmetric_difference_update&#x27;</span>, <br><span class="hljs-string">&#x27;union&#x27;</span>, <br><span class="hljs-string">&#x27;update&#x27;</span>]<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">方法名</th><th align="center">语法格式</th><th align="center">功能</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">add()</td><td align="center">set1.add()</td><td align="center">向 set1 集合中添加数字、字符串、元组或者布尔类型</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set1.add((1,2))<br>     &gt;&gt;&gt; set1<br>     {(1, 2), 1, 2, 3}</td></tr><tr><td align="center">clear()</td><td align="center">set1.clear()</td><td align="center">清空 set1 集合中所有元素</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set1.clear()<br>     &gt;&gt;&gt; set1<br>     set()<br>     set()才表示空集合，{}表示的是空字典</td></tr><tr><td align="center">copy()</td><td align="center">set2 &#x3D; set1.copy()</td><td align="center">拷贝 set1 集合给 set2</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; set1.copy()<br>     &gt;&gt;&gt; set1.add(4)<br>     &gt;&gt;&gt; set1<br>     {1, 2, 3, 4}<br>     &gt;&gt;&gt; set1<br>     {1, 2, 3}</td></tr><tr><td align="center">difference()</td><td align="center">set3 &#x3D; set1.difference(set2)</td><td align="center">将 set1 中有而 set2 没有的元素给 set3</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {3,4}<br>     &gt;&gt;&gt; set3 &#x3D; set1.difference(set2)<br>     &gt;&gt;&gt; set3<br>     {1, 2}</td></tr><tr><td align="center">difference_update()</td><td align="center">set1.difference_update(set2)</td><td align="center">从 set1 中删除与 set2 相同的元素</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {3,4}<br>     &gt;&gt;&gt; set1.difference_update(set2)<br>     &gt;&gt;&gt; set1<br>     {1, 2}</td></tr><tr><td align="center">discard()</td><td align="center">set1.discard(elem)</td><td align="center">删除 set1 中的 elem 元素</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set1.discard(2)<br>     &gt;&gt;&gt; set1<br>     {1, 3}<br>     &gt;&gt;&gt; set1.discard(4)<br>     {1, 3}</td></tr><tr><td align="center">intersection()</td><td align="center">set3 &#x3D; set1.intersection(set2)</td><td align="center">取 set1 和 set2 的交集给 set3</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {3,4}<br>     &gt;&gt;&gt; set3 &#x3D; set1.intersection(set2)<br>     &gt;&gt;&gt; set3<br>     {3}</td></tr><tr><td align="center">intersection_update()</td><td align="center">set1.intersection_update(set2)</td><td align="center">取 set1和 set2 的交集，并更新给 set1</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {3,4}<br>     &gt;&gt;&gt; set1.intersection_update(set2)<br>     &gt;&gt;&gt; set1<br>     {3}</td></tr><tr><td align="center">isdisjoint()</td><td align="center">set1.isdisjoint(set2)</td><td align="center">判断 set1 和 set2 是否没有交集，有交集返回 False；没有交集返回 True</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {3,4}<br>     &gt;&gt;&gt; set1.isdisjoint(set2)<br>     False</td></tr><tr><td align="center">issubset()</td><td align="center">set1.issubset(set2)</td><td align="center">判断 set1 是否是 set2 的子集</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {1,2}<br>     &gt;&gt;&gt; set1.issubset(set2)<br>     False</td></tr><tr><td align="center">issuperset()</td><td align="center">set1.issuperset(set2)</td><td align="center">判断 set2 是否是 set1 的子集</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {1,2}<br>     &gt;&gt;&gt; set1.issuperset(set2)<br>     True</td></tr><tr><td align="center">pop()</td><td align="center">a &#x3D; set1.pop()</td><td align="center">取 set1 中一个元素，并赋值给 a</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; a &#x3D; set1.pop()<br>     &gt;&gt;&gt; set1<br>     {2,3}<br>     &gt;&gt;&gt; a<br>     1</td></tr><tr><td align="center">remove()</td><td align="center">set1.remove(elem)</td><td align="center">移除 set1 中的 elem 元素</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set1.remove(2)<br>     &gt;&gt;&gt; set1<br>     {1, 3}<br>     &gt;&gt;&gt; set1.remove(4)<br>     Traceback (most recent call last):<br>       File “&lt;pyshell#90&gt;”, line 1, in <module><br>         set1.remove(4)<br>     KeyError: 4</td></tr><tr><td align="center">symmetric_difference()</td><td align="center">set3 &#x3D; set1.symmetric_difference(set2)</td><td align="center">取 set1 和 set2 中互不相同的元素，给 set3</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {3,4}<br>     &gt;&gt;&gt; set3 &#x3D; set1.symmetric_difference(set2)<br>     &gt;&gt;&gt; set3<br>     {1, 2, 4}</td></tr><tr><td align="center">symmetric_difference_update()</td><td align="center">set1.symmetric_difference_update(set2)</td><td align="center">取 set1 和 set2 中互不相同的元素，并更新给 set1</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {3,4}<br>     &gt;&gt;&gt; set1.symmetric_difference_update(set2)<br>     &gt;&gt;&gt; set1<br>     {1, 2, 4}</td></tr><tr><td align="center">union()</td><td align="center">set3 &#x3D; set1.union(set2)</td><td align="center">取 set1 和 set2 的并集，赋给 set3</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set2 &#x3D; {3,4}<br>     &gt;&gt;&gt; set3&#x3D;set1.union(set2)<br>     &gt;&gt;&gt; set3<br>     {1, 2, 3, 4}</td></tr><tr><td align="center">update()</td><td align="center">set1.update(elem)</td><td align="center">添加列表或集合中的元素到 set1</td><td align="center">&gt;&gt;&gt; set1 &#x3D; {1,2,3}<br>     &gt;&gt;&gt; set1.update([3,4])<br>     &gt;&gt;&gt; set1<br>     {1,2,3,4}</td></tr></tbody></table><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>【Python】set集合详解<br><a href="https://blog.csdn.net/qq_32727095/article/details/118405143">https://blog.csdn.net/qq_32727095&#x2F;article&#x2F;details&#x2F;118405143</a></p>]]></content>
    
    
    <categories>
      
      <category>Python中特殊的数据类型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>NLP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python中特殊的数据类型之字典dict</title>
    <link href="/2022/07/06/python-dict/"/>
    <url>/2022/07/06/python-dict/</url>
    
    <content type="html"><![CDATA[<h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h2><p>Python 字典是另一种<strong>可变容器模型</strong>，可存储<strong>任意类型</strong>对象。如字符串、数字、元组等其他容器模型。因为字典是<strong>无序</strong>的所以<strong>不支持索引和切片</strong>。</p><h2 id="2-定义"><a href="#2-定义" class="headerlink" title="2. 定义"></a>2. 定义</h2><h3 id="2-1-一般格式"><a href="#2-1-一般格式" class="headerlink" title="2.1. 一般格式"></a>2.1. 一般格式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">字典名 = &#123;元素<span class="hljs-number">1</span>, 元素<span class="hljs-number">2</span>, ...&#125;<br><br><span class="hljs-comment"># 空字典</span><br>字典名 = &#123;&#125; 或者 字典名 = <span class="hljs-built_in">dict</span>()<br></code></pre></td></tr></table></figure><p>元素以<strong>键值对</strong>存在 &#x3D;&#x3D; <code>key(键值):value(实值)</code></p><h3 id="2-2-举例"><a href="#2-2-举例" class="headerlink" title="2.2 举例"></a>2.2 举例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">myDict = &#123;<span class="hljs-string">&#x27;School&#x27;</span>:<span class="hljs-string">&#x27;NUIST&#x27;</span>, <span class="hljs-string">&#x27;City&#x27;</span>:<span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-string">&#x27;Province&#x27;</span>:<span class="hljs-string">&#x27;Jiangsu&#x27;</span>&#125;<br>emptyDict = &#123;&#125;<br></code></pre></td></tr></table></figure><p><img src="/pics/dict-create-1.png"></p><h3 id="2-3-要点"><a href="#2-3-要点" class="headerlink" title="2.3. 要点"></a>2.3. 要点</h3><ol><li><code>key</code> <strong>不可以重复</strong>，否则只会保留<strong>第一个</strong>。</li><li><code>value</code> 值<strong>可以重复</strong>。</li><li><code>key</code> 可以是<strong>任意</strong>的数据类型，但<strong>不能出现可变的数据类型</strong>，保证 <code>key</code> <strong>唯一</strong>。</li><li><code>key</code> 一般形式为<strong>字符串</strong>。</li></ol><h2 id="3-基本操作"><a href="#3-基本操作" class="headerlink" title="3. 基本操作"></a>3. 基本操作</h2><h3 id="3-1-增加"><a href="#3-1-增加" class="headerlink" title="3.1. 增加"></a>3.1. 增加</h3><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">字典名[new key] = new value<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">myDict = &#123;<span class="hljs-string">&#x27;School&#x27;</span>:<span class="hljs-string">&#x27;NUIST&#x27;</span>, <span class="hljs-string">&#x27;City&#x27;</span>:<span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-string">&#x27;Province&#x27;</span>:<span class="hljs-string">&#x27;Jiangsu&#x27;</span>&#125;<br><br><span class="hljs-comment"># 增加一个键值对</span><br>myDict[<span class="hljs-string">&#x27;College&#x27;</span>] = <span class="hljs-string">&#x27;School Of Computer Science&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/pics/dict-add-1.png"></p><h3 id="3-2-删除"><a href="#3-2-删除" class="headerlink" title="3.2. 删除"></a>3.2. 删除</h3><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">del</span> 字典名[key]<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">myDict = &#123;<span class="hljs-string">&#x27;School&#x27;</span>:<span class="hljs-string">&#x27;NUIST&#x27;</span>, <span class="hljs-string">&#x27;City&#x27;</span>:<span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-string">&#x27;Province&#x27;</span>:<span class="hljs-string">&#x27;Jiangsu&#x27;</span>&#125;<br><br><span class="hljs-comment"># 删除</span><br><span class="hljs-keyword">del</span> myDict[<span class="hljs-string">&#x27;Province&#x27;</span>]<br></code></pre></td></tr></table></figure><p><img src="/pics/dict-del-1.png"></p><h3 id="3-3-修改"><a href="#3-3-修改" class="headerlink" title="3.3. 修改"></a>3.3. 修改</h3><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">字典名[key] = new value<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">myDict = &#123;<span class="hljs-string">&#x27;School&#x27;</span>:<span class="hljs-string">&#x27;NUIST&#x27;</span>, <span class="hljs-string">&#x27;City&#x27;</span>:<span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-string">&#x27;Province&#x27;</span>:<span class="hljs-string">&#x27;Jiangsu&#x27;</span>&#125;<br>myDict[<span class="hljs-string">&#x27;School&#x27;</span>] = <span class="hljs-string">&#x27;NJU&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="3-4-查询"><a href="#3-4-查询" class="headerlink" title="3.4. 查询"></a>3.4. 查询</h3><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">value = 字典名[key]<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">myDict = &#123;<span class="hljs-string">&#x27;School&#x27;</span>:<span class="hljs-string">&#x27;NUIST&#x27;</span>, <span class="hljs-string">&#x27;City&#x27;</span>:<span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-string">&#x27;Province&#x27;</span>:<span class="hljs-string">&#x27;Jiangsu&#x27;</span>&#125;<br><br><span class="hljs-comment"># 查询 key = &#x27;School&#x27; 对应的 value</span><br>value = myDict[<span class="hljs-string">&#x27;School&#x27;</span>]<br><br><span class="hljs-built_in">print</span>(value)<br></code></pre></td></tr></table></figure><p><img src="/pics/dict-find-1.png"></p><h3 id="3-5-清空字典"><a href="#3-5-清空字典" class="headerlink" title="3.5. 清空字典"></a>3.5. 清空字典</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">myDict = &#123;<span class="hljs-string">&#x27;School&#x27;</span>:<span class="hljs-string">&#x27;NUIST&#x27;</span>, <span class="hljs-string">&#x27;City&#x27;</span>:<span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-string">&#x27;Province&#x27;</span>:<span class="hljs-string">&#x27;Jiangsu&#x27;</span>&#125;<br><br><span class="hljs-comment">#清空字典</span><br><span class="hljs-built_in">dict</span>.clear()<br></code></pre></td></tr></table></figure><p><img src="/pics/dict-clear-1.png"></p><h2 id="4-其他常用操作"><a href="#4-其他常用操作" class="headerlink" title="4. 其他常用操作"></a>4. 其他常用操作</h2><table><thead><tr><th align="center">名称</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center"><code>len()</code></td><td align="center">测量字典中键值对个数</td></tr><tr><td align="center"><code>keys()</code></td><td align="center">返回字典中所有的 <code>key</code></td></tr><tr><td align="center"><code>values()</code></td><td align="center">返回包含 <code>value</code> 的列表</td></tr><tr><td align="center"><code>items()</code></td><td align="center">返回包含(键值, 实值)元组的列表</td></tr><tr><td align="center"><code>in</code> \ <code>not in</code></td><td align="center">判断 <code>key</code> 是否存在字典中</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 定义一个字典</span><br>myDict = &#123;<span class="hljs-string">&#x27;School&#x27;</span>:<span class="hljs-string">&#x27;NUIST&#x27;</span>, <span class="hljs-string">&#x27;City&#x27;</span>:<span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-string">&#x27;Province&#x27;</span>:<span class="hljs-string">&#x27;Jiangsu&#x27;</span>&#125;<br><br><span class="hljs-comment"># 常见操作</span><br><br><span class="hljs-comment"># len():测量字典中的键值对</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(myDict))<br><br><span class="hljs-comment"># keys():返回所有的key</span><br><span class="hljs-built_in">print</span>(myDict.keys())<br><br><span class="hljs-comment"># values():返回包含value的列表</span><br><span class="hljs-built_in">print</span>(myDict.values())<br><br><span class="hljs-comment"># items():返回包含(键值,实值)元组的列表</span><br><span class="hljs-built_in">print</span>(myDict.items())<br><br><span class="hljs-comment"># in / not in</span><br><span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;NUIST&#x27;</span> <span class="hljs-keyword">in</span> myDict.values():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;南京信息工程大学&quot;</span>)<br><br><span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;安徽&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> myDict.values():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;主校区不在安徽&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="/pics/dict-act-1.png"></p><h2 id="5-三种取值方式"><a href="#5-三种取值方式" class="headerlink" title="5. 三种取值方式"></a>5. 三种取值方式</h2><h3 id="5-1-value-x3D-字典名-key"><a href="#5-1-value-x3D-字典名-key" class="headerlink" title="5.1. value &#x3D; 字典名[key]"></a>5.1. value &#x3D; 字典名[key]</h3><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">myDict = &#123;<span class="hljs-string">&#x27;School&#x27;</span>:<span class="hljs-string">&#x27;NUIST&#x27;</span>, <span class="hljs-string">&#x27;City&#x27;</span>:<span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-string">&#x27;Province&#x27;</span>:<span class="hljs-string">&#x27;Jiangsu&#x27;</span>&#125;<br><br><span class="hljs-comment"># 查询 key = &#x27;School&#x27; 对应的 value</span><br>value = myDict[<span class="hljs-string">&#x27;School&#x27;</span>]<br></code></pre></td></tr></table></figure><h3 id="5-2-setdefault"><a href="#5-2-setdefault" class="headerlink" title="5.2. setdefault()"></a>5.2. setdefault()</h3><ul><li>格式: <code>字典名.get(k, value)</code></li><li>如果 <code>key</code> 值存在,那么返回对应字典的 <code>value</code> ，不会用到自己设置的 <code>value</code> 。</li><li>如果 <code>key</code> 值不存在。返回 <code>None</code> ，并且把新设置的 <code>key</code> 和 <code>value</code> 保存在字典中。</li><li>如果 <code>key</code> 值不存在，但设置了 <code>value</code> ，则返回设置的 <code>value</code> 。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<span class="hljs-string">&#x27;one&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;two&#x27;</span>: <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;three&#x27;</span>: <span class="hljs-number">3</span>&#125;<br><span class="hljs-comment"># 设置默认值，该key在dict中不存在，新增键值对</span><br><span class="hljs-built_in">print</span>(a.setdefault(<span class="hljs-string">&#x27;four&#x27;</span>, <span class="hljs-number">9.2</span>))<br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-comment"># 设置默认值，该key在dict中存在，不会修改dict内容</span><br><span class="hljs-built_in">print</span>(a.setdefault(<span class="hljs-string">&#x27;one&#x27;</span>, <span class="hljs-number">3.4</span>))<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><img src="/pics/dict-setdefault-1.png"></p><h3 id="5-3-get"><a href="#5-3-get" class="headerlink" title="5.3. get()"></a>5.3. get()</h3><ul><li>格式: <code>字典名.get(k, value)</code></li><li>如果 <code>key</code> 值存在,那么返回对应字典的 <code>value</code> ，不会用到自己设置的 <code>value</code> 。</li><li>如果 <code>key</code> 值不存在。返回 <code>None</code> ，但是<strong>不会</strong>把新设置的 <code>key</code> 和 <code>value</code> 保存在字典中。</li><li>如果 <code>key</code> 值不存在，但设置了 <code>value</code> ，则返回设置的 <code>value</code> 。</li></ul><p><img src="/pics/dict-get-1.png"></p><h2 id="6-遍历"><a href="#6-遍历" class="headerlink" title="6. 遍历"></a>6. 遍历</h2><h3 id="6-1-key"><a href="#6-1-key" class="headerlink" title="6.1. key()"></a>6.1. key()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 1. key</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> myDict.keys():<br>    <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><h3 id="6-2-value"><a href="#6-2-value" class="headerlink" title="6.2. value()"></a>6.2. value()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 2. value</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> myDict.values():<br>    <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><h3 id="6-3-item"><a href="#6-3-item" class="headerlink" title="6.3. item"></a>6.3. item</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 3. 所有项 (元素) item</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> myDict.items():<br>    <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><h3 id="6-4-依次打印key和value"><a href="#6-4-依次打印key和value" class="headerlink" title="6.4. 依次打印key和value"></a>6.4. 依次打印key和value</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 4. 依次打印 key 和 value, 通过索引</span><br><span class="hljs-keyword">for</span> key,value <span class="hljs-keyword">in</span> myDict.items():<br>    <span class="hljs-built_in">print</span>(key,value)<br></code></pre></td></tr></table></figure><h3 id="6-5-元素值和对应的下标索引-enumerate"><a href="#6-5-元素值和对应的下标索引-enumerate" class="headerlink" title="6.5. 元素值和对应的下标索引(enumerate())"></a>6.5. 元素值和对应的下标索引(enumerate())</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 5.元素值和对应的下标索引 enumerate(列表名)</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(myDict):<br>    <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="/pics/dict-view-1.png"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>Python dict字典setdefault()方法<br><a href="http://c.biancheng.net/view/4387.html">http://c.biancheng.net/view/4387.html</a></p><p>Python字典(dict)详解<br><a href="https://blog.csdn.net/qq_45096273/article/details/107446492">https://blog.csdn.net/qq_45096273&#x2F;article&#x2F;details&#x2F;107446492</a></p>]]></content>
    
    
    <categories>
      
      <category>Python中特殊的数据类型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
